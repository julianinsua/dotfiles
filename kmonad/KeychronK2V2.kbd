
(defcfg
  ;; For Linux
  input  (device-file "/dev/input/by-id/usb-Keychron_Keychron_K2-event-kbd")
  output (uinput-sink "K2V2 sink"
    ;; To understand the importance of the following line, see the section on
    ;; Compose-key sequences at the near-bottom of this file.
    "/run/current-system/sw/bin/sleep 1 && /run/current-system/sw/bin/setxkbmap -option compose:ralt")
  cmp-seq rctl    ;; Set the compose key to `RightAlt'
  cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; Comment this if you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)

;; Only put on your defsrc what you intend to remap, you don't need to add every key on your keyboard
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet cmp  rctl
)

(defalias
	nav (layer-next nav)															;; Hold for nav layer
	qwe (layer-switch qwerty)													;; Back to the querty layer
	meh (around ctl (around alt lmet))								;; one key to meh 
  escl  (tap-hold-next-release 150 esc @qwe)        ;; Esc and control combined
  sspc  (tap-hold-next-release 200 spc lmet)        ;; Hold space gives you super key
	hra (tap-hold-next-release 250 a @meh)
	hrs	(tap-hold-next-release 250 s lalt)						;; Home Row Mod s - Alt
	hrd	(tap-hold-next-release 250 d lctl)						;; Home Row Mod d - Ctrl
	hrf	(tap-hold-next-release 250 f lsft)						;; Home Row Mod f - Shift
	hrl	(tap-hold-next-release 250 l lalt)						;; Home Row Mod l - Alt
	hrk	(tap-hold-next-release 250 k lctl)						;; Home Row Mod k - Ctrl
	hrj	(tap-hold-next-release 250 j lsft)						;; Home Row Mod j - Shift
	hr; (tap-hold-next-release 250 ; @meh)
	num (layer-toggle num)														;; Nums while pressing
	tnum (layer-switch num)														;; Stay in nums layer
	nlay (tap-hold-next-release 150 @tnum @num)				;; Hold for num layer, single tap toggles
	;; nml (stepped (@nlay) (layer-next num))						;; Test: if tapped once toggle, if tapped twice layer next if held switch
	;; Tap for num layer 1 tap hold for next press
	;; double tap for num layer hold 
	mt (multi-tap 200 lctl (layer-switch num))

)

(deflayer qwerty
  grv   1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab   q    w    e    r    t    y    u    i    o    p    [    ]    \
  @escl a    @hrs @hrd @hrf g    h    @hrj @hrk @hrl ;    '    ret
  lsft  z    x    c    v    b    n    m    ,    .    /    rsft
  @mt   @nav @nlay          @sspc          ralt rmet cmp  rctl
)

(deflayer num
  _     _    _    _    _    _    _    _    _    _    _    _    _    _
  tab   !    @    #    $    %    ^    &    *    \(   \)   \_   _    \
  @escl 1    2    3    4    5    6    7    8    9    0    -    ret
  lsft  +    =    {    }    ~    [    ]    bspc del  `    @qwe
  lctl  lmet lalt           @sspc          ralt rmet cmp  rctl
)

(deflayer nav
  _     _    _    _    _    _    _    _    _    _     _    _    _    _
  _     f1   f2   f3   f4   f5   f6   f7   f8   f9    f10  f11  f12  _
  @escl _    home pgup pgdn end  left down up   right ;    '    ret
  _     mute vold volu _    _    _    prev pp   next  _    _
  _     _    lalt           @sspc          _    _     _    _
)

#|
I'm going to write the ideas here and I'll implement them later
- [X] Home row mods Shift Ctrl Alt NumLayer
- [ ] Meh mod key on ; and a
- [ ] Find something usefull to do with shifts and tabsa
- [ ] Double tapping hold layer switch
|#

